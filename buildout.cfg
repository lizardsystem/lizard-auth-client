[buildout]
index = http://packages.lizardsystem.nl
find-links =
prefer-final = true
versions = versions
extensions =
    mr.developer
show-picked-versions = true
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    pydev
develop = .
eggs =
    lizard-auth-client


[versions]
# Specific pins.
lizard-auth-client =
Django = 1.7.8

# Reported by buildout
Babel = 1.3
Jinja2 = 2.7.3
MarkupSafe = 0.23
#Pygments = 2.0.2
#Sphinx = 1.3.1
alabaster = 0.7.6
bleach = 1.4.1
chardet = 2.3.0
check-manifest = 0.25
collective.recipe.omelette = 0.16
collective.recipe.sphinxbuilder = 0.8.2
colorama = 0.3.3
coverage = 3.7.1
createcoverage = 1.3.2
django-extensions = 1.4.6
django-nose = 1.2
djangorecipe = 2.1.1
docutils = 0.12
html5lib = 0.99999
itsdangerous = 0.24
mock = 1.0.1
mr.developer = 1.33
nose = 1.3.4
pb.recipes.pydev = 0.4.5
pep8 = 1.6.2
pkginfo = 1.2.1
pyflakes = 0.9.2
pyroma = 1.8.2
pytz =
readme = 0.5.1
requests = 2.7.0
setuptools = 18.0.1
six = 1.9.0
snowballstemmer = 1.2.0
south = 1.0.1
sphinx-rtd-theme = 0.1.8
syseggrecipe = 1.4
twine = 1.5.0
wheel = 0.24.0
z3c.recipe.mkdir = 0.6
zc.buildout = 2.3.1
zc.recipe.egg = 2.0.1
zest.releaser = 5.1


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/lizard-ui.git


[sysegg]
recipe = syseggrecipe
force-sysegg = true
eggs =
    psycopg2


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite
    ${buildout:directory}/var/cache


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_auth_client
settings = testsettings
test = lizard_auth_client
eggs = lizard-auth-client


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
dependent-scripts = true
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    zest.releaser
    zest.releaser[recommended]


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
